# The lane line and the driving area segment branches without share information with each other and without link
YOLOP:
  [[74, 84, 94],   #Det_out_idx, Da_Segout_idx, LL_Segout_idx
      # [from, module, args]
      # from：输入来自那一层，-1代表上一次，1代表第1层，3代表第3层
      # module：子模块
      # args：模块参数，channel_in，channel_out，kernel_size，stride，padding，bias等]
      # Focus           ch_in, ch_out, kernel
      # Conv            ch_in, ch_out, kernel, stride
      # BottleneckCSP   ch_in, ch_out, number
      # SPP             ch_in, ch_out, kernel_size
      # Upsample        输出大小, 倍数, 上采样算法
      # Concat          dimension
    [-1, Conv, [3, 32, 3, 1]],  # 0            # 640

    [-1, Conv, [32, 64, 3, 2]],  # 1-P1/2      # 320
    [-1, Conv, [64, 64, 3, 1]],                # 320           

    [-1, Conv, [64, 128, 3, 2]],  # 3-P2/4     # 160
    [-1, Conv, [128, 64, 1, 1]],               # 160
    [-2, Conv, [128, 64, 1, 1]],               # 160
    [-1, Conv, [64, 64, 3, 1]],                # 160
    [-1, Conv, [64, 64, 3, 1]],                # 160
    [-1, Conv, [64, 64, 3, 1]],                # 160
    [-1, Conv, [64, 64, 3, 1]],                # 160
    [[-1, -3, -5, -6], Concat, [1]],           # 160
    [-1, Conv, [256, 256, 1, 1]],  # 11        # 160
          
    [-1, MP, []],                              # 80
    [-1, Conv, [256, 128, 1, 1]],              # 80
    [-3, Conv, [256, 128, 1, 1]],              # 160
    [-1, Conv, [128, 128, 3, 2]],              # 80
    [[-1, -3], Concat, [1]],  # 16-P3/8        # 80
    [-1, Conv, [256, 128, 1, 1]],              # 80
    [-2, Conv, [256, 128, 1, 1]],              # 80
    [-1, Conv, [128, 128, 3, 1]],              # 80
    [-1, Conv, [128, 128, 3, 1]],              # 80
    [-1, Conv, [128, 128, 3, 1]],              # 80
    [-1, Conv, [128, 128, 3, 1]],              # 80
    [[-1, -3, -5, -6], Concat, [1]],           # 80
    [-1, Conv, [512, 512, 1, 1]],  # 24        # 80
          
    [-1, MP, []],                              # 40                  
    [-1, Conv, [512, 256, 1, 1]],              # 40 
    [-3, Conv, [512, 256, 1, 1]],              # 80 
    [-1, Conv, [256, 256, 3, 2]],              # 40 
    [[-1, -3], Concat, [1]],  # 29-P4/16       # 40 
    [-1, Conv, [512, 256, 1, 1]],              # 40
    [-2, Conv, [512, 256, 1, 1]],              # 40
    [-1, Conv, [256, 256, 3, 1]],              # 40
    [-1, Conv, [256, 256, 3, 1]],              # 40
    [-1, Conv, [256, 256, 3, 1]],              # 40
    [-1, Conv, [256, 256, 3, 1]],              # 40
    [[-1, -3, -5, -6], Concat, [1]],           # 40
    [-1, Conv, [1024, 1024, 1, 1]],  # 37      # 40
          
    [-1, MP, []],                              # 20  
    [-1, Conv, [1024, 512, 1, 1]],             # 20  
    [-3, Conv, [1024, 512, 1, 1]],             # 40  
    [-1, Conv, [512, 512, 3, 2]],              # 20  
    [[-1, -3], Concat, [1]],  # 42-P5/32       # 20 
    [-1, Conv, [1024, 256, 1, 1]],             # 20
    [-2, Conv, [1024, 256, 1, 1]],             # 20
    [-1, Conv, [256, 256, 3, 1]],              # 20
    [-1, Conv, [256, 256, 3, 1]],              # 20
    [-1, Conv, [256, 256, 3, 1]],              # 20
    [-1, Conv, [256, 256, 3, 1]],              # 20
    [[-1, -3, -5, -6], Concat, [1]],           # 20
    [-1, Conv, [1024, 1024, 1, 1]],  # 50      # 20         

    #backbone


    [ -1, SPP, [1024, 1024, [5, 9, 13]]],     #8        # 20

    [ -1, BottleneckCSP, [1024, 1024, 1, False]], #9    # 20
    [ -1, Conv,[1024, 1024, 1, 1]],   #10               # 20
    [ -1, Upsample, [None, 2, 'nearest']],  #11         # 40

    [ [-1, 37], Concat, [1]],    #12                    # 40
    [ -1, BottleneckCSP, [2048, 1024, 1, False]], #13   # 40
    [ -1, Conv, [1024, 512, 1, 1]],  #57                # 40
    [ -1, Upsample, [None, 2, 'nearest']],  #15         # 80

    [ [-1, 24], Concat, [1]],     #16                   # 80
    [ -1, BottleneckCSP, [1024, 512, 1, False]], #17    # 80
    [ -1, Conv, [512, 256, 1, 1]],      #61             # 80
    [ -1, Upsample, [None, 2, 'nearest']],  #15         # 160  
    
    [ [-1, 11], Concat, [1]],     #63                   # 160      
    [ -1, BottleneckCSP, [512, 256, 1, False]],  #64    # 160
    [ -1, Conv, [256, 256, 3, 2]],      #18             # 80
    #Neek 





    [ [-1, 61], Concat, [1]],       #19                 # 80                
    [ -1, BottleneckCSP, [512, 512, 1, False]], #67     # 80  
    [ -1, Conv, [512, 512, 3, 2]],      #21             # 40

    [ [-1, 57], Concat, [1]],   #22                     # 40
    [ -1, BottleneckCSP, [1024, 1024, 1, False]],  #70  # 40

    [ 64, Conv, [256, 128, 3, 2]],      #21             # 40
    [ 67, Conv, [512, 256, 3, 2]],      #21             # 40
    [ 70, Conv, [1024, 512, 3, 2]],      #21            # 40
 
    [ [71, 72, 73], Detect,  [1, [[3,9,5,11,4,20], [7,18,6,39,12,31], 
                        [19,50,38,81,68,157]], [128, 256, 512]]], # 74
    # Detection head




    [ 63, Conv, [512, 256, 3, 1]],   #25                # 160
    [ -1, Upsample, [None, 2, 'nearest']],  #26         # 320
    [ -1, BottleneckCSP, [256, 128, 1, False]],  #27    # 320

    [ -1, Conv, [128, 64, 3, 1]],    #28
    [ -1, Upsample, [None, 2, 'nearest']],  #29
    [ -1, Conv, [64, 32, 3, 1]],    #30
    [ -1, BottleneckCSP, [32, 16, 1, False]],    #31

    [ -1, Conv, [16, 8, 3, 1]],    #30
    [ -1, BottleneckCSP, [8, 4, 1, False]],    #31
    [ -1, Conv, [4, 2, 3, 1]], #83
    # Driving area segmentation head



    [ 63, Conv, [512, 256, 3, 1]],   #34
    [ -1, Upsample, [None, 2, 'nearest']],  #35
    [ -1, BottleneckCSP, [256, 128, 1, False]],  #36

    [ -1, Conv, [128, 64, 3, 1]],    #37
    [ -1, Upsample, [None, 2, 'nearest']],  #38
    [ -1, Conv, [64, 32, 3, 1]],    #39
    [ -1, BottleneckCSP, [32, 16, 1, False]],    #40

    [ -1, Conv, [16, 8, 3, 1]],    #30
    [ -1, BottleneckCSP, [8, 4, 1, False]],    #31
    [ -1, Conv, [4, 2, 3, 1]], #92 
    # Lane line segmentation head
  ]